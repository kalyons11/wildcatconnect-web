<h4><p class="text-muted">Manage schedule and cancel days if necessary.</p></h4>
<a href="/app/dashboard"><button class="btn btn-primary btn-back">Cancel</button></a>
<h4 id="mainLabel">Current Schedule Mode</h4>
<h2 id="modeLabel" style="color:#561838;">LOADING...</h2>
<select id='modeSelect' class="selectMode" name="modeSelect" onchange="changeFunction();">
</select>
<br>
<h6><i><b>NOTE: If you change the mode to a vacation, you must manually select "Snow Day" for those days that we will miss. Thank you.</b></i></h6>
<hr style="border-color:#561838";></hr>
<h6 style="float:right;"><i>NOTE: "Snow Day" refers to any missed school day.</i></h6>
<h4 id="titleLabel">Available School Days</h4>
<div id="schedules">

</div>
<script>

    loadPage();

    var structures = new Array();
    var dictionary = { };
    var mode;

    function loadPage(message) {
        $("#schedules").html("");
        setLoadingMessage("Loading schedule...");
        $("#loading").fadeIn();
        $.ajax({
            url: "manage/ajax/load",
            type: "post",
            data: {key: "value"}, // Encrypt all data...
            datatype: 'json',
            crossDomain: true,

            success: function(response){
                mode = response["mode"];
                structures = response["structures"];
                dictionary = response["dictionary"];
                if (structures != null && mode != null) {
                    loadTable();
                    $("#loading").fadeOut();
                } else {
                    setMessage("Unable to load schedules. Please try to reload the page.", true);
                    $("#loading").fadeOut();
                }
            },

            error: function(request, status, error) {
                setMessage("Internal server error. If this problem continues, please contact support.", true);
                $("#loading").fadeOut();
            }
        });
    }

    function loadTable() {
        var select = document.getElementById("modeSelect");

        // Do not hardcode!!! TODO

        var arrayList = ["NORMAL", "THANKSGIVING BREAK", "HOLIDAY BREAK", "FEBRUARY BREAK", "SPRING BREAK", "SUMMER"];

        for (var i = 0; i < arrayList.length; i++) {
            var option = document.createElement('option');
            option.text = arrayList[i];
            option.value = i;
            select.appendChild(option);
        };

        $("#modeLabel").html(mode);
        $('#modeSelect option[value='+arrayList.indexOf(mode)+']').attr('selected', 'selected');

        $("#titleLabel").html("Available School Days (" + structures.length+")");

        var tableDiv = document.getElementById("schedules");
        var table = document.createElement("TABLE");
        var tableBody = document.createElement("TBODY");

        table.appendChild(tableBody);
        table.className = "table table-striped";

        var heading = new Array();
        heading[0] = "Date";
        heading[1] = "Schedule Type";
        heading[2] = "Change Type";
        heading[3] = "Custom Action";

        //TABLE COLUMNS

        var tr = document.createElement("TR");
        tableBody.appendChild(tr);

        $("#schedules").html("");

        for (var i = 0; i < heading.length; i++) {
            var th = document.createElement("TH");
            th.width = '25%';
            th.appendChild(document.createTextNode(heading[i]));
            tr.appendChild(th);
        };

        for (var i = 0; i < structures.length; i++) {
            var tr = document.createElement("TR");
            var tdTwo = document.createElement("TD");
            var parts = structures[i].get("schoolDate").split('-');
            var date = new Date(parts[2], parts[0]-1,parts[1]);
            var string = date.toString('dddd, MMMM d, yyyy');
            var today = new Date();
            today = new Date(today.getFullYear(), today.getMonth(), today.getDate(), 0, 0, 0, 0);
            if (date < today || (i == 0 && structures[i].get("isActive") == 0)) {
                tdTwo.appendChild(document.createTextNode("INACTIVE SCHOOL DAY - "));
            } else if (date.toDateString() === today.toDateString()) {
                tdTwo.style.color = "red";
            };
            tdTwo.appendChild(document.createTextNode(string));
            tr.appendChild(tdTwo);

            //Schedule Type

            if (structures[i].get("isSnow") == 1) {
                var tdOne = document.createElement("TD");
                tdOne.appendChild(document.createTextNode("SNOW DAY"));
                tdOne.style.fontWeight = 'bold';
                tr.appendChild(tdOne);
            }
            else {
                var schedule = structures[i].get("scheduleType");

                if (schedule === "*") {
                    var tdOne = document.createElement("TD");
                    tdOne.appendChild(document.createTextNode("CUSTOM SCHEDULE - " + structures[i].get("customString")));
                    tdOne.style.fontWeight = 'bold';
                    tr.appendChild(tdOne);
                } else {
                    var actual = dictionary[schedule];
                    var tdOne = document.createElement("TD");
                    tdOne.appendChild(document.createTextNode(actual));
                    tr.appendChild(tdOne);
                };
            };

            if (! date < today && (i != 0 || structures[i].get("isActive") == 1)) {

                var tdThree = document.createElement("TD");
                var selectList = document.createElement("SELECT");
                selectList.name = "typeSelect";
                selectList.className = "typeSelect";
                var option = document.createElement("option");
                option.value = -1;
                option.text = "NONE SELECTED";
                selectList.appendChild(option);
                for (var j = 0; j < Object.keys(dictionary).length; j++) {
                    var option = document.createElement("option");
                    option.value = j;
                    option.text = dictionary[Object.keys(dictionary)[j]];
                    selectList.appendChild(option);
                }
                selectList.onchange = (function() {

                    var count = i;

                    return function(e) {

                        var index = this.selectedIndex - 1;

                        BootstrapDialog.confirm({
                            title: 'Confirmation',
                            message: "Are you sure you want to edit this day's schedule?",
                            type: BootstrapDialog.TYPE_DANGER, // <-- Default value is BootstrapDialog.TYPE_PRIMARY
                            closable: true, // <-- Default value is false
                            draggable: true, // <-- Default value is false
                            btnCancelLabel: 'No', // <-- Default value is 'Cancel',
                            btnOKLabel: 'Yes', // <-- Default value is 'OK',
                            btnOKClass: 'btn-primary', // <-- If you didn't specify it, dialog type will be used,
                            callback: function(result) {
                                // result will be true if button was click, while it will be false if users close the dialog directly.
                                if(result) {
                                    var key = reverseDictionary[index];

                                    structures[count].set("scheduleType", key);
                                    structures[count].set("customSchedule", "None.");
                                    structures[count].set("customString", "");
                                    structures[count].save(null, {
                                        success: function(object) {
                                            $("#spinnerDiv").html("");
                                            var alertString = "Schedule successfully updated.";
                                            localStorage.setItem("scheduleAlertString", alertString);
                                            $(document).ready(loadScheduleTable());
                                        },
                                        error: function(error) {
                                            errorFunction(error.code.toString() + " - " + error.message.toString(), "ParseError", "Script 3628");
                                            BootstrapDialog.show({
                                                type: BootstrapDialog.TYPE_DEFAULT,
                                                title: "Error",
                                                message: "Error occurred. Please try again."
                                            });
                                            $("#spinnerDiv").html("");
                                        }
                                    });
                                };
                            }
                        });

                    };
                })();
                tdThree.appendChild(selectList);
                tr.appendChild(tdThree);
            } else {
                var tdThree = document.createElement("TD");
                tdThree.appendChild(document.createTextNode("No actions available."));
                tr.appendChild(tdThree);
            };

            var tdFour = document.createElement("TD");

            if (i < 3 && structures[i].get("isSnow") == 0) {
                var button = document.createElement("INPUT");
                button.type = "button";
                button.className = "btn btn-lg btn-primary snow";
                button.value = "Snow Day";
                button.name = i;
                button.style.backgroundColor = "red";
                button.style.borderColor = "red";
                button.style.marginBottom = "10px";
                button.onclick = (function() {

                    var count = i;

                    return function(e) {

                        if (count != structures.length - 1) {

                            BootstrapDialog.confirm({
                                title: 'Confirmation',
                                message: "Are you sure you want to make this day a snow day? This will affect all schedules after this date.",
                                type: BootstrapDialog.TYPE_DANGER, // <-- Default value is BootstrapDialog.TYPE_PRIMARY
                                closable: true, // <-- Default value is false
                                draggable: true, // <-- Default value is false
                                btnCancelLabel: 'No', // <-- Default value is 'Cancel',
                                btnOKLabel: 'Yes', // <-- Default value is 'OK',
                                btnOKClass: 'btn-primary', // <-- If you didn't specify it, dialog type will be used,
                                callback: function(result) {
                                    // result will be true if button was click, while it will be false if users close the dialog directly.
                                    if(result) {
                                        if (count === 0) {
                                            window.showYesterday = false;
                                        };
                                        $("#spinnerDiv").html('<a><img src="./../spinner.gif" alt="Logo" width="40" style="vertical-align: middle; padding-top:12px; padding-left:10px;"/></a>');
                                        Parse.Cloud.run('snowDay', { "ID" : structures[count].get("schoolDayID") }, {
                                            success: function() {
                                                $("#spinnerDiv").html("");
                                                var alertString = "Schedule successfully updated.";
                                                localStorage.setItem("scheduleAlertString", alertString);
                                                $(document).ready(loadScheduleTable());
                                            },
                                            error: function(error) {
                                                errorFunction(error.code.toString() + " - " + error.message.toString(), "ParseError", "Script 3692");
                                                BootstrapDialog.show({
                                                    type: BootstrapDialog.TYPE_DEFAULT,
                                                    title: "Error",
                                                    message: "Error occurred. Please try again."
                                                });
                                                $("#spinnerDiv").html("");
                                            }
                                        });
                                    };
                                }
                            });
                        } else {
                            BootstrapDialog.show({
                                type: BootstrapDialog.TYPE_DEFAULT,
                                title: "Whoops!",
                                message: "You can't go back one day from here! This is the last day in the available queue."
                            });
                        };

                    };
                })();
                tdFour.appendChild(button);
            };

            if (! date < today && (i != 0 || structures[i].get("isActive") == 1)) {
                var buttonTwo =document.createElement("INPUT");
                buttonTwo.type = "button";
                buttonTwo.className = "btn btn-lg btn-primary";
                buttonTwo.value = "Edit Custom Schedule";
                buttonTwo.name = i;
                buttonTwo.style.marginRight = "10px";
                buttonTwo.onclick = (function() {
                    var count = i;

                    return function(e) {

                        var parts = structures[count].get("schoolDate").split('-');
                        var date = new Date(parts[2], parts[0]-1,parts[1]);
                        var string = date.toString('dddd, MMMM d, yyyy');
                        var ID = structures[count].get("schoolDayID");

                        BootstrapDialog.show({
                            title: 'Edit Custom Schedule',
                            message: function(dialogItself) {
                                var $form = $('<form></form>');
                                var $title = $('<input type="text" style="width:100%;">');
                                $form.append(string+'<br><br>Schedule Name (i.e. "Day D, Wildcat Way Period")').append($title);
                                var $schedule = $('<textarea rows="14" style="overflow-y: scroll; resize: none; width:100%;"></textarea>');
                                if (structures[count].get("scheduleType") === "*") {
                                    $title.val(structures[count].get("customString"));
                                    $schedule.val(structures[count].get("customSchedule"));
                                } else {
                                    $schedule.val("Period 1: \nPeriod 2: \nPeriod 3: \nPeriod 4: \n1st: \n2nd: \n3rd: \nPeriod 6: \nPeriod 7: ");
                                };
                                dialogItself.setData('schedule', $schedule);
                                dialogItself.setData('title', $title);
                                $form.append('<br><br>Schedule<br><br>').append($schedule);
                                return $form;
                            },// <-- Default value is BootstrapDialog.TYPE_PRIMARY
                            closable: false, // <-- Default value is false
                            draggable: true, // <-- Default value is false
                            buttons: [{
                                label: 'Cancel',
                                action: function (dialogItself) {
                                    dialogItself.close();
                                }
                            }, {
                                label: 'Save',
                                cssClass: 'btn-primary',
                                action: function (dialogItself) {

                                    var title = dialogItself.getData('title').val();
                                    var schedule = dialogItself.getData('schedule').val();

                                    if (! title || ! schedule) {
                                        BootstrapDialog.show({
                                            type: BootstrapDialog.TYPE_DEFAULT,
                                            title: "Error",
                                            message: "No data entered!"
                                        });
                                    } else {
                                        BootstrapDialog.confirm({
                                            title: 'Confirmation',
                                            message: 'Are you sure you want to save this custom schedule?',
                                            type: BootstrapDialog.TYPE_DANGER, // <-- Default value is BootstrapDialog.TYPE_PRIMARY
                                            closable: true, // <-- Default value is false
                                            draggable: true, // <-- Default value is false
                                            btnCancelLabel: 'No', // <-- Default value is 'Cancel',
                                            btnOKLabel: 'Yes', // <-- Default value is 'OK',
                                            btnOKClass: 'btn-primary', // <-- If you didn't specify it, dialog type will be used,
                                            callback: function(result) {
                                                // result will be true if button was click, while it will be false if users close the dialog directly.
                                                if(result) {
                                                    $("#spinnerDiv").html('<a><img src="./../spinner.gif" alt="Logo" width="40" style="vertical-align: middle; padding-top:12px; padding-left:10px;"/></a>');
                                                    var query = new Parse.Query("SchoolDayStructure");
                                                    query.equalTo("schoolDayID", ID);
                                                    query.first({
                                                        success: function(object) {
                                                            object.set("customString", title);
                                                            object.set("customSchedule", schedule);
                                                            object.set("scheduleType", "*");
                                                            object.save(null, {
                                                                success: function() {
                                                                    $("#spinnerDiv").html("");
                                                                    localStorage.setItem("scheduleAlertString", "Schedule successfully updated.");
                                                                    dialogItself.close();
                                                                    $(document).ready(loadScheduleTable());
                                                                },
                                                                error: function(error) {
                                                                    errorFunction(error.code.toString() + " - " + error.message.toString(), "ParseError", "Script 1002");
                                                                    BootstrapDialog.show({
                                                                        type: BootstrapDialog.TYPE_DEFAULT,
                                                                        title: "Error",
                                                                        message: "Error occurred. Please try again."
                                                                    });
                                                                    $("#spinnerDiv").html("");
                                                                    dialogItself.close();
                                                                }
                                                            });
                                                        },
                                                        error: function(error) {
                                                            errorFunction(error.code.toString() + " - " + error.message.toString(), "ParseError", "Script 1013");
                                                            BootstrapDialog.show({
                                                                type: BootstrapDialog.TYPE_DEFAULT,
                                                                title: "Error",
                                                                message: "Error occurred. Please try again."
                                                            });
                                                            $("#spinnerDiv").html("");
                                                            dialogItself.close();
                                                        }
                                                    });

                                                };
                                            }
                                        });
                                    };
                                }
                            }]
                        });

                    };
                })();
                tdFour.appendChild(buttonTwo);
            } else if (i < 2 && structures[i].get("isSnow") === 1) {
                tdFour.appendChild(document.createTextNode("No actions available."));
            }

            tr.appendChild(tdFour);
            tableBody.appendChild(tr);

            tableDiv.appendChild(table);
        };
    }

    $(document).on('click', ".snow", function() {
        var index = this.name;
        var username = requests[index]["username"];

        BootstrapDialog.confirm({
            title: 'Confirmation',
            message: 'Are you sure you want to approve this user?',
            type: BootstrapDialog.TYPE_DANGER, // <-- Default value is BootstrapDialog.TYPE_PRIMARY
            closable: true, // <-- Default value is false
            draggable: true, // <-- Default value is false
            btnCancelLabel: 'No', // <-- Default value is 'Cancel',
            btnOKLabel: 'Yes', // <-- Default value is 'OK',
            btnOKClass: 'btn-primary', // <-- If you didn't specify it, dialog type will be used,
            callback: function(result) {
                // result will be true if button was click, while it will be false if users close the dialog directly.
                if(result) {
                    $("#loading").fadeIn();
                    setLoadingMessage("Approving user...");
                    $.ajax({
                        url: "manage/ajax/snow",
                        type: "post",
                        data: { username: username },
                        datatype: 'json',
                        crossDomain: true,

                        success: function(response){
                            setLoadingMessage("Reloading users...");
                            if (response["res"] == "SUCCESS") {
                                loadPage("User successfully approved.");
                            } else {
                                setMessage("Unable to approve user. Please try to reload the page.", true);
                                $("#loading").fadeOut();
                            }
                        },

                        error: function(request, status, error) {
                            setMessage("Internal server error. If this problem continues, please contact support.", true);
                            $("#loading").fadeOut();
                        }
                    });
                };
            }
        });
    });

    $(document).on('click', ".deny", function () {
        var count = this.name;
        var username = requests[count]["username"];

        BootstrapDialog.confirm({
            title: 'Confirmation',
            message: 'Are you sure you want to delete this user?',
            type: BootstrapDialog.TYPE_DANGER, // <-- Default value is BootstrapDialog.TYPE_PRIMARY
            closable: true, // <-- Default value is false
            draggable: true, // <-- Default value is false
            btnCancelLabel: 'No', // <-- Default value is 'Cancel',
            btnOKLabel: 'Yes', // <-- Default value is 'OK',
            btnOKClass: 'btn-primary', // <-- If you didn't specify it, dialog type will be used,
            callback: function(result) {
                // result will be true if button was click, while it will be false if users close the dialog directly.
                if(result) {
                    $("#loading").fadeIn();
                    setLoadingMessage("Denying user...");
                    $.ajax({
                        url: "manage/ajax/deny",
                        type: "post",
                        data: { username: username },
                        datatype: 'json',
                        crossDomain: true,

                        success: function(response){
                            setLoadingMessage("Reloading users...");
                            if (response["res"] == "SUCCESS") {
                                loadPage("User successfully denied.");
                            } else {
                                setMessage("Unable to deny user. Please try to reload the page.", true);
                                $("#loading").fadeOut();
                            }
                        },

                        error: function(request, status, error) {
                            setMessage("Internal server error. If this problem continues, please contact support.", true);
                            $("#loading").fadeOut();
                        }
                    });
                };
            }
        });
    });

    $(document).on('change', ".selectMode", function () {
        var mode = this.selectedOptions[0].text;
        BootstrapDialog.confirm({
                title: 'Confirmation',
                message: 'Are you sure you want to update this user?',
                type: BootstrapDialog.TYPE_DANGER, // <-- Default value is BootstrapDialog.TYPE_PRIMARY
                closable: true, // <-- Default value is false
                draggable: true, // <-- Default value is false
                btnCancelLabel: 'No', // <-- Default value is 'Cancel',
                btnOKLabel: 'Yes', // <-- Default value is 'OK',
                btnOKClass: 'btn-primary', // <-- If you didn't specify it, dialog type will be used,
                callback: function (result) {
                    // result will be true if button was click, while it will be false if users close the dialog directly.
                    if (result) {
                        $("#loading").fadeIn();
                        setLoadingMessage("Updating schedule mode...");
                        $.ajax({
                            url: "manage/ajax/update",
                            type: "post",
                            data: { mode: mode },
                            datatype: 'json',
                            crossDomain: true,

                            success: function(response){
                                setLoadingMessage("Reloading schedules...");
                                if (response["res"] == "SUCCESS") {
                                    loadPage("Schedule mode successfully updated.");
                                } else {
                                    setMessage("Unable to update schedule mode. Please try to reload the page.", true);
                                    $("#loading").fadeOut();
                                }
                            },

                            error: function(request, status, error) {
                                setMessage("Internal server error. If this problem continues, please contact support.", true);
                                $("#loading").fadeOut();
                            }
                        });
                    };
                }
            });
    });

    $(document).on('change', ".typeSelect", function () {
        var mode = this.selectedOptions[0].text;
        BootstrapDialog.confirm({
            title: 'Confirmation',
            message: 'Are you sure you want to update this user?',
            type: BootstrapDialog.TYPE_DANGER, // <-- Default value is BootstrapDialog.TYPE_PRIMARY
            closable: true, // <-- Default value is false
            draggable: true, // <-- Default value is false
            btnCancelLabel: 'No', // <-- Default value is 'Cancel',
            btnOKLabel: 'Yes', // <-- Default value is 'OK',
            btnOKClass: 'btn-primary', // <-- If you didn't specify it, dialog type will be used,
            callback: function (result) {
                // result will be true if button was click, while it will be false if users close the dialog directly.
                if (result) {
                    $("#loading").fadeIn();
                    setLoadingMessage("Updating schedule mode...");
                    $.ajax({
                        url: "manage/ajax/update",
                        type: "post",
                        data: { mode: mode },
                        datatype: 'json',
                        crossDomain: true,

                        success: function(response){
                            setLoadingMessage("Reloading schedules...");
                            if (response["res"] == "SUCCESS") {
                                loadPage("Schedule mode successfully updated.");
                            } else {
                                setMessage("Unable to update schedule mode. Please try to reload the page.", true);
                                $("#loading").fadeOut();
                            }
                        },

                        error: function(request, status, error) {
                            setMessage("Internal server error. If this problem continues, please contact support.", true);
                            $("#loading").fadeOut();
                        }
                    });
                };
            }
        });
    });

</script>